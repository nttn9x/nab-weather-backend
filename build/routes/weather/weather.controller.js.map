{"version":3,"sources":["../../../app/routes/weather/weather.controller.ts"],"names":["getLocation","req","res","next","weoid","params","cityName","query","url","process","env","WEATHER_API","length","send","then","json","data"],"mappings":";;;;;;;AAAA;;;;;;;;AAEA,IAAMA,WAAW;AAAA,qEAAG,iBAAOC,GAAP,EAAiBC,GAAjB,EAA2BC,IAA3B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAERC,YAAAA,KAFQ,GAEEH,GAAG,CAACI,MAFN,CAERD,KAFQ;AAGRE,YAAAA,QAHQ,GAGKL,GAAG,CAACM,KAHT,CAGRD,QAHQ;AAKZE,YAAAA,GALY,aAKHC,OAAO,CAACC,GAAR,CAAYC,WALT,uBAKiCP,KALjC;;AAAA,kBAOZ,cAAcH,GAAG,CAACM,KAPN;AAAA;AAAA;AAAA;;AAQND,YAAAA,SARM,GAQOL,GAAG,CAACM,KARX,CAQND,QARM;;AAAA,kBASV,CAACA,SAAD,IAAaA,SAAQ,CAACM,MAAT,GAAkB,CATrB;AAAA;AAAA;AAAA;;AAUZV,YAAAA,GAAG,CAACW,IAAJ,CAAS,EAAT;AAVY;;AAAA;AAcdL,YAAAA,GAAG,aAAMA,GAAN,oBAAmBF,SAAnB,CAAH;;AAdc;AAAA;AAAA,mBAiBG,2BAAME,GAAN,EAAWM,IAAX,CAAgB,UAACZ,GAAD;AAAA,qBAAcA,GAAG,CAACa,IAAJ,EAAd;AAAA,aAAhB,CAjBH;;AAAA;AAiBVC,YAAAA,IAjBU;AAmBhBd,YAAAA,GAAG,CAACW,IAAJ,CAASG,IAAT;AAnBgB;AAAA;;AAAA;AAAA;AAAA;AAqBhBb,YAAAA,IAAI,aAAJ;;AArBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXH,WAAW;AAAA;AAAA;AAAA,GAAjB","sourcesContent":["import fetch from \"node-fetch\";\n\nconst getLocation = async (req: any, res: any, next: any) => {\n  try {\n    const { weoid } = req.params;\n    const { cityName } = req.query;\n\n    let url = `${process.env.WEATHER_API}/location/${weoid}`;\n\n    if (\"cityName\" in req.query) {\n      const { cityName } = req.query;\n      if (!cityName || cityName.length < 1) {\n        res.send([]);\n        return;\n      }\n\n      url = `${url}?query=${cityName}`;\n    }\n\n    const data = await fetch(url).then((res: any) => res.json());\n\n    res.send(data);\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport { getLocation };\n"],"file":"weather.controller.js"}